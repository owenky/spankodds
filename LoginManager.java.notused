import java.io.IOException;
import java.util.logging.*;
import javafx.fxml.FXMLLoader;
import javafx.scene.*;
import javafx.scene.layout.*;
import javafx.scene.control.*;
import javafx.embed.swing.*;
import javafx.application.Platform;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javax.swing.*;
import javax.swing.SwingUtilities;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;
import javafx.event.EventHandler;
/** Manages control flow for logins */
public class LoginManager {
	

	//public LinesTable2 scrollpane;

  Stage stage = new Stage();
  Stage stage2 = new Stage();
  Stage stage3 = new Stage();
  Stage stage4 = new Stage();
  Stage stage5 = new Stage();
  Stage stage6 = new Stage();
  Scene scene;
  
  
  public LoginManager(Scene scene) {
    this.scene = scene;
  }

  /**
   * Callback method invoked to notify that a user has been authenticated.
   * Will show the main application screen.
   */ 
  public void authenticated(String sessionID) 
  {
    showMainView(sessionID);
  }

  /**
   * Callback method invoked to notify that a user has logged out of the main application.
   * Will show the login application screen.
   */ 
  public void logout() 
  {
	stage.close();  
    showLoginScreen();
	
  }
  
  public void showLoginScreen() {
    try {
      FXMLLoader loader = new FXMLLoader(
        getClass().getResource("login.fxml")
      );
      scene.setRoot((Parent) loader.load());
      LoginController controller = 
        loader.<LoginController>getController();
      controller.initManager(this);
    } catch (IOException ex) {
      Logger.getLogger(LoginManager.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

/*
  public void setUpStage(Stage stage)
  {
	  if(stage == null)
	  {
		  stage = new Stage();
	  }
	  SportsTabPane stb = new SportsTabPane();
	  TopView tv = new TopView();
	  BorderPane pane = new BorderPane(stb,tv,null,null,null);
	  Scene mainscene =  new Scene(pane, 920, 850);
	  stage.setScene(mainscene);
	  //stage.setFullScreen(true);
	  		 stage.setOnCloseRequest(new EventHandler<WindowEvent>() {
				@Override
				public void handle(WindowEvent event) 
				{
					
					forcelogout();
					showLoginScreen();
				}
			});
            
  }
*/
  public static void setUpStage(Stage stage)
  {
	  if(stage == null)
	  {
		  stage = new Stage();
	  }
	  SportsTabPane stb = new SportsTabPane();
	  TopView tv = new TopView();
	  BorderPane pane = new BorderPane(stb,tv,null,null,null);
	  Scene mainscene =  new Scene(pane, 920, 850);
	  stage.setScene(mainscene);

            
  }
  private void showMainView2()
  {
    try 
	{
		setUpStage(stage);
        stage.show();
		
			
    } catch (Exception ex) {
      System.out.println("exception "+ex);
    }
  }
  
  public void forcelogout() // need to implemet
  {
	  // kill all subscriptions need to do a consumer.close() for all consumers;
	  // we also need to send a message to server that we are logged out so he can update user database table
	  // we also need to send all our user prefs in user object for next time we login
	  
	  
  }
  /*
  private void createAndSetSwingContent(final SwingNode swingNode) {
             SwingUtilities.invokeLater(new Runnable() {
                 @Override
                 public void run() {
					 //frame = new StocksTable();
					 scrollpane = new LinesTable2();
					 AppController.setLinesTable(scrollpane);
					 
						//final JFXPanel mainJFXPanel = new JFXPanel();
						//frame.getContentPane().add(mainJFXPanel);
						//frame.add(mainJFXPanel);
						
						swingNode.setContent(scrollpane);
						
                 }
             });
         }
  */

  private void showMainView(String sessionID) {
    try {
      FXMLLoader loader = new FXMLLoader(
        getClass().getResource("mainview.fxml")
      );
      scene.setRoot((Parent) loader.load());
      MainViewController controller = 
        loader.<MainViewController>getController();
      controller.initSessionID(this, sessionID);
	  showMainView2();
    } catch (IOException ex) {
      Logger.getLogger(LoginManager.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

}

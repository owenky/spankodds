import javafx.scene.Scene;
import javafx.scene.control.TabPane;
import javafx.scene.control.Tab;
import javafx.scene.control.Label;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import javax.swing.SwingUtilities;
import javafx.embed.swing.SwingNode;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javafx.event.*;

import java.util.Vector;
import java.util.Date;
public class SportsTab extends Tab
{

public LinesTable2 scrollpane;
public JTable table;	
public LinesTableData dataModel;	
public SwingNode swingNode;
public long cleartime;
boolean firsttime = true;
public Vector whichgames;
SportsTabPane myParent = null;
Vector gamesIdVec;
		public SportsTab(String text,SportsTabPane myParent)
		{
			super(text);
			this.myParent = myParent;
			this.setClosable(false);
			cleartime = (new java.util.Date()).getTime();
		

			init();
		}
		
		public void setClearTime(long ct)
		{
			cleartime = ct;
		}
		public void init()
		{

			
			this.setOnSelectionChanged(new EventHandler<Event>() {
            @Override
            public void handle(Event t) {
				System.out.println("IN TAB"+getText());
                if (isSelected()) //create and show
				{
					gamesIdVec = new Vector();
					System.out.println("IM SELECTED="+getText());
					Vector allgameids = AppController.getGamesIdVec();
					Vector allsports = AppController.getSportsVec();
					java.util.Date today = new java.util.Date();
					System.out.println("SPORTSTAB="+getText());
					for(int k =0;k< allgameids.size(); k++)
					{
						String gameid= (String)allgameids.get(k);
						Game g = AppController.getGame(gameid);
						int leagueid = g.getLeague_id();
						Sport s = AppController.getSport(""+leagueid);
						//System.out.println(s.getSportname());
						if(getText().equals("Today"))
						{
							if(g.getGamedate().compareTo(today) == 0)
							{
								gamesIdVec.add(gameid);
							}
						}
						
						else if(s.getSportname().equalsIgnoreCase(getText()))
						{
							gamesIdVec.add(gameid);
						}
						
						
					}
					
					swingNode = new SwingNode();
					createAndSetSwingContent(swingNode,whichgames);
					System.out.println("this="+this);
					setContent(swingNode);
					System.out.println("TABLE="+table);
					System.out.println("sportstabpane="+myParent);
                    myParent.setCurrentTable(table);
				   System.out.println("IN2 SELECTED="+getText());
				    myParent.setCurrentScrollPane(scrollpane);
				   System.out.println("IN3 SELECTED="+getText());
				   dataModel.fire();
				   System.out.println("IN4 SELECTED="+getText());
				   table.repaint();
				   scrollpane.repaint();
				   
				   
                }
				else //destroy
				{
					System.out.println("IM NOT SELECTED="+getText());
					if(dataModel != null)
					{
						cleartime = dataModel.getClearTime();
						
						System.out.println("IM NOT SELECTED="+getText()+"..");
						System.out.println("============"+getText()+"===========cleartime killing="+new java.util.Date(cleartime));
						AppController.removeDataModel(dataModel);
						table=null;
						scrollpane= null;
						dataModel = null;
						swingNode = null;
						
					}
				
				}
            }
        });
			
			
			
			
		}
		
		
		
		private void createAndSetSwingContent(final SwingNode swingNode,Vector whichgames) 
		{
			try
			{
             SwingUtilities.invokeAndWait(new Runnable() { // needs to be invokeandwait!!!!
		   //  SwingUtilities.invokeLater(new Runnable() { // needs to be invokeandwait!!!!
                 @Override
                 public void run() {
					 //frame = new StocksTable();
					 System.out.println("inside createswingnode!");
					 
					 long ct = AppController.getClearAllTime();
					 if(ct > cleartime) { cleartime = ct; }
					System.out.println("=========="+getText()+"======cleartime adding="+new java.util.Date(cleartime));
					  scrollpane = new LinesTable2();
					  dataModel = new LinesTableData(cleartime,gamesIdVec);
					//  dataModel = new LinesTableData();
					 
					 AppController.addDataModel(dataModel);
					 table = scrollpane.getTable();
					 table.setModel(dataModel);

					 scrollpane.adjustColumns(false);
					 swingNode.setContent(scrollpane);
					 System.out.println("SN TABLE="+table);
					 
					 //AppController.setLinesTable(scrollpane);
					 //AppController.setLinesTableData(m_data);
						
                 }
             });
			}
			catch(Exception ex)
			{
				System.out.println("exception ddd"+ex);
			}
         }
		 
		 
}